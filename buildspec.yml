version: 0.2
phases:
  install:
    #as of 2019? all runtimes are included in the ubuntu image, but need to be set up here, no more aws/codebuild/docker runtime :(
    runtime-versions:
      docker: 18
    commands:
      - echo "installing packages..(nothing for now)"
      - pip install awsebcli --upgrade
      #application onicaapp needs to exists, otherwise this command will create the app
      - eb init --platform "docker" --region $AWS_DEFAULT_REGION onicaapp
      - apt-get install stress -y
  #The building proccess is moved to pre_build stage, as if the build fails, it will still proceed to the post_build stage, hence it may upload broken images to ECR.
  pre_build: 
    commands:
      - echo Logging to ECR...
      - $(aws ecr get-login --no-include-email)
      - echo Build started on $(date)
      - echo Building docker image
      - region="$AWS_DEFAULT_REGION"

      - docker build -t onica_app:latest .
      - tagImageDate=$(echo p$(date +%Y)$(date +%m)$(date +%d)-$(date +%H)$(date +%M)$(date +%S))
      - echo "image date creation :" "$tagImageDate"
      - echo "region is :" "$region"
      #- echo $tagImageCommit
      - echo Pushing docker image to ECR


      - docker tag onica_app:latest 191691036077.dkr.ecr.$region.amazonaws.com/onica_app:$tagImageDate
      - docker tag onica_app:latest 191691036077.dkr.ecr.$region.amazonaws.com/onica_app:latest
      - docker push 191691036077.dkr.ecr.$region.amazonaws.com/onica_app:$tagImageDate
      - docker push 191691036077.dkr.ecr.$region.amazonaws.com/onica_app:latest
      - sed -i "s/REPLACEME/$tagImageDate/" Dockerrun.aws.json

  build:
    commands:
      - echo 'Build succeded!'
  post_build:
    commands:
      - echo "Commenting this for troubleshooting purposes"
      - eb clone onica-app-blue -n onica-app-green
      - eb swap onica-app-blue -n onica-app-green
artifacts:
  files:
    - Dockerrun.aws.json
    - .ebextensions/*
